name: ci

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Running ci
    if: 'github.event.pull_request.draft != true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    env:
      CI: true

    steps:
      - name: ðŸ›’ Checkout code
        uses: actions/checkout@v3

      - name: ðŸ’¿ Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ðŸ’¾ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ðŸ’¾ Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: ðŸ§© Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

      - name: ðŸ§ª Test
        run: yarn test

      - name: ðŸ”¨ Build
        run: yarn ncc

      - name: ðŸ“„ Bundle size
        uses: ./
        with:
          branch: 'test'
          paths: 'reports/**/*.json'
          onlyDiff: 'false'
          ghToken: ${{ secrets.GITHUB_TOKEN }}